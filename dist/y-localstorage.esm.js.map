{"version":3,"file":"y-localstorage.esm.js","sources":["../src/y-localstorage.ts"],"sourcesContent":["import * as Y         from 'yjs'\nimport { Observable } from 'lib0/observable'\n\nnamespace LocalStorageProvider {\n  const GUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i\n\n  type SubDocChanges = {\n    added:Set<Y.Doc>, removed:Set<Y.Doc>, loaded:Set<Y.Doc>\n  }\n\n  export class LocalStorageProvider extends Observable<any> {\n    private _DocPrefix:string\n    private _sharedDoc:Y.Doc\n\n    private _UpdateCounter:number = 1    // index \"0\" is reserved for compaction\n    private _CounterLimit:number  = 5\n\n    private _pendingUpdates:number   = 0\n    private _completedUpdates:number = 0\n\n    private _SubDocMap:Map<Y.Doc,LocalStorageProvider> = new Map()\n\n    constructor (DocName:string, sharedDoc:Y.Doc, CounterLimit:number = 5) {\n      super()\n\n      this._DocPrefix = DocName + '-'\n      this._sharedDoc = sharedDoc\n\n      this._UpdateCounter = 0        // will be updated by \"_applyStoredUpdates\"\n      this._CounterLimit  = CounterLimit\n\n      try {\n        this._applyStoredUpdates()         // also updates \"this._UpdateCounter\"\n      } catch (Signal:any) {\n        this._breakdownWith(\n          'could not restore document from persistence', Signal\n        )\n      }\n\n      this._storeUpdate = this._storeUpdate.bind(this)\n      sharedDoc.on('update', this._storeUpdate)\n\n      this._manageSubDocs = this._manageSubDocs.bind(this)\n      sharedDoc.on('subdocs', this._manageSubDocs)\n\n      this.destroy = this.destroy.bind(this)\n      sharedDoc.on('destroy', this.destroy)\n    }\n\n  /**** isSynced - is true while this provider and its sharedDoc are in-sync ****/\n\n    public get isSynced ():boolean {\n      return (this._pendingUpdates === 0)\n    }\n\n  /**** destroy - destroys persistence, invalidates provider ****/\n\n    public destroy ():void {\n      if (this._sharedDoc == null) { return }    // persistence no longer exists\n\n      this._removeStoredUpdatesStartingWith(0)\n      this._removeStoredSubDocs()\n\n      this._sharedDoc.off('update',  this._storeUpdate)\n      this._sharedDoc.off('subdocs', this._manageSubDocs)\n      this._sharedDoc.off('destroy', this.destroy)\n\n      if (! this.isSynced) {\n        this._pendingUpdates = 0\n        this.emit('sync-aborted',[this,1.0])\n      }\n\n// @ts-ignore allow clearing of \"this._sharedDoc\"\n      this._sharedDoc = undefined\n    }\n\n  /**** destroyPersistenceNamed ****/\n\n    public static destroyPersistenceNamed (DocName:string):void {\n      let KeyList:string[] = []\n        for (let i = 0, l = localStorage.length; i < l; i++) {\n          const Key = localStorage.key(i) as string\n          if (\n            Key.startsWith(DocName + '-') || Key.startsWith(DocName + '.')\n          ) { KeyList.push(Key) }\n        }\n      KeyList.forEach((Key) => {\n        localStorage.removeItem(Key)\n      })\n    }\n\n  /**** _applyStoredUpdates - applies all stored (incremental) updates to sharedDoc ****/\n\n    private _applyStoredUpdates ():void {\n      const PrefixLength = this._DocPrefix.length\n\n      const StorageKeys = this._StorageKeys()\n      if (StorageKeys.length > 0) {\n        this._pendingUpdates += StorageKeys.length; this._reportProgress()\n\n        StorageKeys.forEach((Key) => {\n          let UpdateIndex = parseInt(Key.slice(PrefixLength),10)\n          if (UpdateIndex > this._UpdateCounter) {\n            this._UpdateCounter = UpdateIndex\n          }\n\n          const Update = new Uint8Array(JSON.parse(localStorage.getItem(Key) as string))\n          Y.applyUpdate(this._sharedDoc, Update)  // can be applied in any order\n\n          this._completedUpdates++; this._reportProgress()\n        })\n      } else {\n        this._UpdateCounter = 1                // keep \"0\" for compacted updates\n        this._reportProgress()\n      }\n    }\n\n  /**** _storeUpdate - stores a given (incremental) update ****/\n\n    private _storeUpdate (Update:Uint8Array, Origin?:any):void {\n      if (this._sharedDoc == null) { return }    // persistence no longer exists\n\n      if (Origin !== this) {          // ignore updates applied by this provider\n        this._pendingUpdates++; this._reportProgress()\n          try {\n            if (this._UpdateCounter < this._CounterLimit) {     // append update\n              localStorage.setItem(                                  // may fail\n                this._DocPrefix + this._UpdateCounter,\n                JSON.stringify(Array.from(Update))\n              )\n\n              this._UpdateCounter++\n            } else {                     // compact previous and current updates\n              localStorage.setItem(                                  // may fail\n                this._DocPrefix + 0,\n                JSON.stringify(Array.from(Y.encodeStateAsUpdate(this._sharedDoc)))\n              )\n\n              this._removeStoredUpdatesStartingWith(1)\n            }\n          } catch (Signal:any) {\n            this._breakdownWith(\n              'could not persist document update', Signal\n            )\n          }\n        this._completedUpdates++; this._reportProgress()\n      }\n    }\n\n  /**** _removeStoredUpdatesStartingWith - removes stored (incremental) updates ****/\n\n    private _removeStoredUpdatesStartingWith (minimalIndex:number):void {\n      const PrefixLength = this._DocPrefix.length\n\n      let lastFailure:any = undefined\n        this._StorageKeys().forEach((Key) => {\n          let UpdateIndex = parseInt(Key.slice(PrefixLength),10)\n          if (UpdateIndex >= minimalIndex) {\n            try {\n              localStorage.removeItem(Key)                           // may fail\n            } catch (Signal:any) {\n              lastFailure = Signal\n            }\n          }\n        })\n      if (lastFailure != null) {\n        console.warn(\n          'y-localstorage: could not clean-up localstorage, reason: ' + lastFailure\n        )\n      }\n\n      this._UpdateCounter = minimalIndex\n    }\n\n  /**** _removeStoredSubDocs - removes any stored subdocs ****/\n\n    private _removeStoredSubDocs ():void {\n      this._removeStoredSubDoc()                      // avoids duplicating code\n    }\n\n  /**** _removeStoredSubDoc - removes a single stored subdoc ****/\n\n    private _removeStoredSubDoc (SubDoc?:Y.Doc):void {\n      let lastFailure:any = undefined\n        const StorageKeys = (\n          SubDoc == null\n          ? this._StorageSubKeys()\n          : this._StorageSubKeysFor(SubDoc)\n        )\n\n        StorageKeys.forEach((Key) => {\n          try {\n            localStorage.removeItem(Key)                             // may fail\n          } catch (Signal:any) {\n            lastFailure = Signal\n          }\n        })\n      if (lastFailure != null) {\n        console.warn(\n          'y-localstorage: could not clean-up localstorage, reason: ' + lastFailure\n        )\n      }\n    }\n\n  /**** _breakdown - breaks down this provider ****/\n\n    private _breakdown ():void {\n// @ts-ignore allow clearing of \"this._sharedDoc\"\n      this._sharedDoc = undefined\n\n      if (! this.isSynced) {\n        this._pendingUpdates = 0\n        this.emit('sync-aborted',[this,1.0])\n      }\n\n      this._SubDocMap.forEach((Provider) => Provider._breakdown())\n    }\n\n  /**** _breakdownWith - breaks down this provider after failure ****/\n\n    private _breakdownWith (Message:string, Reason?:any):never {\n      this._breakdown()\n\n      throw new Error(\n        Message + (Reason == null ? '' : ', reason: ' + Reason)\n      )\n    }\n\n  /**** _manageSubDocs - manages subdoc persistences ****/\n\n    private _manageSubDocs (Changes:SubDocChanges):void {\n      const providePersistenceFor = (SubDoc:Y.Doc) => {\n        if (\n          ! this._SubDocMap.has(SubDoc) &&\n          (this._sharedDoc.guid !== SubDoc.guid)     // \"doc copies\" are strange\n        ) {\n          const SubDocProvider = new LocalStorageProvider(\n            this._DocPrefix.slice(0,-1) + '.' + SubDoc.guid, SubDoc,\n            this._CounterLimit\n          )\n          this._SubDocMap.set(SubDoc,SubDocProvider)\n        }\n      }\n\n      const { added, removed, loaded } = Changes\n\n      if (removed != null) {\n        removed.forEach((SubDoc:Y.Doc) => {\n          const Provider = this._SubDocMap.get(SubDoc)\n          if (Provider != null) { Provider._breakdown() }\n\n          this._SubDocMap.delete(SubDoc)\n\n          if (\n            (this._sharedDoc != null) &&          // \"doc copies\" are strange...\n            (this._sharedDoc.guid !== SubDoc.guid) &&\n            Array.from(this._sharedDoc.getSubdocs().values()).every(\n              (existingSubDoc) => (existingSubDoc.guid !== SubDoc.guid)\n            )                                                       // ...really\n          ) {\n            this._removeStoredSubDoc(SubDoc)\n          }\n        })\n      }\n\n      if (loaded != null) {\n        loaded.forEach((SubDoc:Y.Doc) => {\n          providePersistenceFor(SubDoc)\n        })\n      }\n    }\n\n  /**** _reportProgress - emits events reporting synchronization progress ****/\n\n    private _reportProgress ():void {\n      switch (true) {\n        case (this._pendingUpdates === 0):\n          this._completedUpdates = 0\n          this.emit('synced',[this])\n          break\n        case (this._completedUpdates === 0):\n          this.emit('sync-started',[this,0.0])\n          break\n        case (this._completedUpdates === this._pendingUpdates):\n          this.emit('sync-finished',[this,1.0])\n          this._pendingUpdates = this._completedUpdates = 0\n          this.emit('synced',[this])\n          break\n        default:\n          const Progress = this._completedUpdates/this._pendingUpdates\n          this.emit('sync-continued',[this,Progress])\n      }\n    }\n\n  /**** _StorageKeys - lists all keys used for sharedDoc itself ****/\n\n    private _StorageKeys ():string[] {\n      return this._StorageSubKeysFor()                // avoids duplicating code\n    }\n\n  /**** _StorageSubKeys - lists all keys used for subdocs of sharedDoc ****/\n\n    private _StorageSubKeys ():string[] {\n      const DocPrefix    = this._DocPrefix.slice(0,-1) + '.'\n      const PrefixLength = DocPrefix.length\n\n      const Result:string[] = []\n        for (let i = 0, l = localStorage.length; i < l; i++) {\n          const Key = localStorage.key(i) as string\n          if (\n            Key.startsWith(DocPrefix) &&\n            (GUIDPattern.test(Key.slice(PrefixLength)) === true)\n          ) { Result.push(Key) }\n        }\n      return Result\n    }\n\n  /**** _StorageSubKeysFor - lists all keys used for a given subdoc ****/\n\n    private _StorageSubKeysFor (SubDoc?:Y.Doc):string[] {\n      const DocPrefix = (\n        SubDoc == null\n        ? this._DocPrefix\n        : this._DocPrefix.slice(0,-1) + '.' + SubDoc.guid + '-'\n      )\n      const PrefixLength = DocPrefix.length\n\n      const Result:string[] = []\n        for (let i = 0, l = localStorage.length; i < l; i++) {\n          const Key = localStorage.key(i) as string\n          if (\n            Key.startsWith(DocPrefix) &&\n            (/^\\d+$/.test(Key.slice(PrefixLength)) === true)\n          ) { Result.push(Key) }\n        }\n      return Result\n    }\n  }\n}\n"],"names":[],"mappings":"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"}