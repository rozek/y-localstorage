{"version":3,"file":"y-localstorage.esm.js","sources":["../src/y-localstorage.ts"],"sourcesContent":["import * as Y         from 'yjs'\nimport { Observable } from 'lib0/observable'\n\nnamespace LocalStorageProvider {\n  export class LocalStorageProvider extends Observable<any> {\n    private _DocPrefix:string\n    private _sharedDoc:Y.Doc\n\n    private _UpdateCounter:number = 0\n    private _CounterLimit:number  = 5\n\n    private _pendingUpdates:number   = 0\n    private _completedUpdates:number = 0\n\n    constructor (DocName:string, sharedDoc:Y.Doc, CounterLimit:number = 5) {\n      super()\n\n      this._DocPrefix = DocName + '-'\n      this._sharedDoc = sharedDoc\n\n      this._UpdateCounter = 0        // will be updated by \"_applyStoredUpdates\"\n      this._CounterLimit  = CounterLimit\n\n      this._applyStoredUpdates()           // also updates \"this._UpdateCounter\"\n\n      this._storeUpdate = this._storeUpdate.bind(this)\n      sharedDoc.on('update', this._storeUpdate)\n\n      this.destroy = this.destroy.bind(this)\n      sharedDoc.on('destroy', this.destroy)\n    }\n\n  /**** _applyStoredUpdates - applies all stored (incremental) updates to sharedDoc ****/\n\n    private _applyStoredUpdates ():void {\n      const PrefixLength = this._DocPrefix.length\n\n      const StorageKeys = this._StorageKeys()\n      if (StorageKeys.length > 0) {\n        this._pendingUpdates += StorageKeys.length; this._reportProgress()\n\n        StorageKeys.forEach((Key) => {\n          let UpdateIndex = parseInt(Key.slice(PrefixLength),10)\n          if (UpdateIndex > this._UpdateCounter) {\n            this._UpdateCounter = UpdateIndex\n          }\n\n          const Update = new Uint8Array(JSON.parse(localStorage.getItem(Key) as string))\n          Y.applyUpdate(this._sharedDoc, Update)  // can be applied in any order\n\n          this._completedUpdates++; this._reportProgress()\n        })\n      } else {\n        this._reportProgress()\n      }\n    }\n\n  /**** _storeUpdate - stores a given (incremental) update ****/\n\n    private _storeUpdate (Update:Uint8Array, Origin?:any):void {\n      if (this._sharedDoc == null) { return }    // persistence no longer exists\n\n      if (Origin !== this) {          // ignore updates applied by this provider\n        this._pendingUpdates++; this._reportProgress()\n          if (this._UpdateCounter < this._CounterLimit-1) {\n            localStorage.setItem(\n              this._DocPrefix + this._UpdateCounter,\n              JSON.stringify(Array.from(Update))\n            )\n          } else {\n            this._removeStoredUpdates()\n            localStorage.setItem(\n              this._DocPrefix + this._UpdateCounter,\n              JSON.stringify(Array.from(Y.encodeStateAsUpdate(this._sharedDoc)))\n            )\n          }\n          this._UpdateCounter++\n        this._completedUpdates++; this._reportProgress()\n      }\n    }\n\n  /**** _removeStoredUpdates - removes any stored (incremental) updates ****/\n\n    private _removeStoredUpdates ():void {\n      this._StorageKeys().forEach((Key) => {\n        localStorage.removeItem(Key)\n      })\n      this._UpdateCounter = 0\n    }\n\n  /**** destroy - destroys persistence, invalidates provider ****/\n\n    destroy ():void {\n      if (this._sharedDoc == null) { return }    // persistence no longer exists\n\n      this._removeStoredUpdates()\n\n      this._sharedDoc.off('update',  this._storeUpdate)\n      this._sharedDoc.off('destroy', this.destroy)\n\n      if (! this.isSynced) {\n        this._pendingUpdates = 0\n        this.emit('sync-aborted',[this,1.0])\n      }\n\n// @ts-ignore allow clearing of \"this._sharedDoc\"\n      this._sharedDoc = undefined\n    }\n\n  /**** isSynced - is true while this provider and its sharedDoc are in-sync ****/\n\n    get isSynced ():boolean {\n      return (this._pendingUpdates === 0)\n    }\n\n  /**** _reportProgress - emits events reporting synchronization progress ****/\n\n    private _reportProgress ():void {\n      switch (true) {\n        case (this._pendingUpdates === 0):\n          this._completedUpdates = 0\n          this.emit('synced',[this])\n          break\n        case (this._completedUpdates === 0):\n          this.emit('sync-started',[this,0.0])\n          break\n        case (this._completedUpdates === this._pendingUpdates):\n          this.emit('sync-finished',[this,1.0])\n          this._pendingUpdates = this._completedUpdates = 0\n          this.emit('synced',[this])\n          break\n        default:\n          const Progress = this._completedUpdates/this._pendingUpdates\n          this.emit('sync-continued',[this,Progress])\n      }\n    }\n\n  /**** _StorageKeys - lists all keys used by this provider ****/\n\n    private _StorageKeys ():string[] {\n      const PrefixLength = this._DocPrefix.length\n\n      const Result:string[] = []\n        for (let i = 0, l = localStorage.length; i < l; i++) {\n          const Key = localStorage.key(i) as string\n          if (\n            Key.startsWith(this._DocPrefix) &&\n            (/^\\d+$/.test(Key.slice(PrefixLength)) === true)\n          ) { Result.push(Key) }\n        }\n      return Result\n    }\n  }\n}\n"],"names":[],"mappings":"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"}